<?php/** * Created by PhpStorm. * User: Administrator * Date: 2018/4/12 0012 * Time: 16:48 */namespace app\system\controller;use app\common\model\ConfModel;use cache\GetCache;use EasyWeChat\Factory;use think\Db;use think\Request;class Conf extends Common{    /**     * 支付宝配置     */    public function alipay(){        $name = 'alipay';        if(Request::instance()->isPost()){            $conf_content = input('conf_content/a');            $result = ConfModel::setConf($name,$conf_content);            if(!$result) return returnState(100,'设置失败');            GetCache::closeCache($name);            return returnState(100,'设置成功');        }        return $this->fetch('',[            'info' => ConfModel::getConf($name)        ]);    }    /**     * 微信配置     */    public function wechat(){        $name = 'wechat';        if(Request::instance()->isPost()){            $conf_content = input('conf_content/a');            $result = ConfModel::setConf($name,$conf_content);            GetCache::closeCache($name);            if(!$result) return returnState(100,'设置失败');            return returnState(200,'设置成功');        }        return $this->fetch('',[            'info' => ConfModel::getConf($name)        ]);    }    public function wechatUpload(){        $file = request()->file('file');        // 移动到框架应用根目录/public/uploads/ 目录下        if($file) {            $info = $file->validate(['size'=>15678,'ext'=>'txt'])->move('./', $_FILES['file']['name'], true);            if ($info) {                // 成功上传后 获取上传信息                return returnState(200, '上传成功');            } else {                // 上传失败获取错误信息                return returnState(100, '上传失败', $file->getError());            }        }        return returnState(100, '请上传文件');    }    /**     * 微信菜单设置     */    public function wechat_menu(){        $name = 'wechat_menu';        GetCache::closeCache($name);        if(Request::instance()->isPost()){            $wechat = GetCache::getCache('wechat');            if(!$wechat) return returnState(100,'请先设置公众号配置！');            $conf_content = input('post.conf_content/a');            $flag = ConfModel::setConf($name,$conf_content);            GetCache::closeCache($name);            if(false !== $flag){                $app = Factory::officialAccount(GetCache::getCache('wechat'));//                p($app->base->getValidIps());                $app->menu->create($conf_content);                return returnState(200,'设置成功');            }else{                return returnState(100,'设置失败');            }        }        return $this->fetch('',[            'info' => json_encode(ConfModel::getConf($name)),        ]);    }    /**     * 微信支付设置     */    public function wechat_pay(){        $name = 'wechat_pay';        if(Request::instance()->isPost()){            $conf_content = input('conf_content/a');            $result = ConfModel::setConf($name,$conf_content);            if(!$result) return $this->error('设置失败');            GetCache::closeCache($name);            return $this->success('设置成功');        }        return $this->fetch('',[            'info' => ConfModel::getConf($name),        ]);    }    public function payUpload(){        $file = request()->file('file');        // 移动到框架应用根目录/public/uploads/ 目录下        if($file) {            $info = $file->validate(['size'=>156788,'ext'=>'pem,p12'])->move('./WxpayV3/cert/', $_FILES['file']['name'], true);            if ($info) {                // 成功上传后 获取上传信息                return returnState(200, '上传成功');            } else {                // 上传失败获取错误信息                return returnState(100, '上传失败', $file->getError());            }        }        return returnState(100, '请上传文件');    }    /**     * 微信关注回复     */    public function wechat_reply(){        $name = 'wechat_reply';        if(Request::instance()->isPost()){            $value = input('post.conf_content/a');            $handle = ConfModel::setConf($name,$value);            if(!$handle) return returnState(100,'设置失败');            GetCache::closeCache($name);            return returnState(200,'设置成功');        }        return $this->fetch('',[            'info' => ConfModel::getConf($name),        ]);    }    /**     * 提现设置     */    public function depostConf(){        $name = 'depost_conf';        if(Request::instance()->isPost()){            $value = input('post.conf_content/a');            $handle = ConfModel::setConf($name,$value);            if(!$handle) return returnState(100,'设置失败');            GetCache::closeCache($name);            return returnState(200,'设置成功');        }        return $this->fetch('',[            'info' => ConfModel::getConf($name),        ]);    }    public function logoUpload(){        $file = request()->file('file');        // 移动到框架应用根目录/public/uploads/ 目录下        if($file) {            $info = $file->validate(['size'=>156788,'ext'=>'png'])->move('./resource/web/images/', 'system_logo.png', true);            if ($info) {                // 成功上传后 获取上传信息                return returnState(200, '上传成功');            } else {                // 上传失败获取错误信息                return returnState(100, '上传失败', $file->getError());            }        }        return returnState(100, '请上传文件');    }    public function webConf(){        $name = 'webconfig';        if(Request::instance()->isPost()){            $value = input('post.conf_content/a');            $handle = ConfModel::setConf($name,$value);            if(!$handle) return returnState(100,'设置失败');            GetCache::closeCache($name);            return returnState(200,'设置成功');        }        return $this->fetch('',[            'info' => ConfModel::getConf($name),        ]);    }}