<?php/** * Created by PhpStorm. * User: Administrator * Date: 2018/4/7 0007 * Time: 11:01 */namespace app\system\controller;use app\common\model\MachineTypeModel;use think\Db;use Endroid\QrCode\QrCode;class Machinetype extends Common{    /**     * 首页     * @return mixed     */    public function index(){        $map = [];        $type_list = Db::name('machine_type')            ->where($map)            ->paginate(20,false,['query'=>request()->param()])            ->each(function($item, $key){                $item['type_channel_content'] = json_decode($item['type_channel_content'],true);                return $item;            });        $this->assign('type_list',$type_list);        return $this->fetch();    }    /**     * 添加设备     */    public function createType(){        if($this->request->isPost()){            $input = input('post.');            if(intval($input["sortType"] == 0)){                return $this->error('请输入选择排序类型');            }else{                if($input['channel_start'] == 1){                    $channel_start = 0;                }else{                    $channel_start = 1;                }                switch ($input["sortType"]){                    case "1":                        $result = $this->validate($input,'app\system\validate\VMachineType.sortCreate');                        if(true !== $result){                            // 验证失败 输出错误信息                            return $this->error($result);                        }                        $data['type_channel_content'] = json_encode([                            'channel_total' => $input['natrueNum'],                            'channel_start'=> $channel_start,                            'channel_capacity' => $input["channel_capacity"]                        ]);                        break;                    case "2":                        $result = $this->validate($input,'app\system\validate\VMachineType.create');                        if(true !== $result){                            // 验证失败 输出错误信息                            return $this->error($result);                        }                        $data['type_channel_content'] = json_encode([                            'channel_level' => $input['channel_level'],                            'channel_start' => $channel_start,                            'channel_list' => $input['channel_list'],                            'channel_capacity' => $input['channel_capacity'],                        ]);                        break;                }            }            $data["type_name"] = $input["type_name"];            $data["type_sort_type"] = $input["sortType"];            $data['type_status'] = 1;            $data['type_createTime'] = date('Y-m-d H:i:s',time());            $MachineTypeModel = new MachineTypeModel();            $machine_id = $MachineTypeModel->allowField(true)->data($data)->save();            $machine_id = $MachineTypeModel->type_id;            if(!$machine_id) return $this->error('新增失败，请重试');            return $this->success('新增成功',url('index'));        }        return $this->fetch();    }    /**     * 编辑设备     * @return mixed|void     */    public function editType(){        $MachineTypeModel = new MachineTypeModel();        if($this->request->isPost()){            $data = input('post.');            $result = $this->validate($data,'app\system\validate\VMachineType.create');            if(true !== $result){                // 验证失败 输出错误信息                return $this->error($result);            }            $data['type_createTime'] = date('Y-m-d H:i:s',time());            $data['type_channel_content'] = json_encode([                'channel_level' => $data['channel_level'],                'channel_sum' => $data['channel_sum'],                'level_list' => $data['level_list'],                'sum_store' => $data['sum_store'],                'content' =>$data['type_channel_content']            ]);            $MachineTypeModel->allowField(true)->save($data,['type_id'=>$data['type_id']]);            return $this->success('编辑成功','index');        }        $info = $MachineTypeModel->where(['type_id'=>input('type_id')])->find();        if(!$info) return $this->error('没有指定类型信息');        $info = $info->getData();        $info['type_channel_content'] = json_decode($info['type_channel_content'],true);        $this->assign('info',$info);        return $this->fetch();    }}