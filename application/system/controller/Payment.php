<?php/** * Created by PhpStorm. * User: Administrator * Date: 2018/5/9 0009 * Time: 15:31 */namespace app\system\controller;use cache\GetCache;use EasyWeChat\Factory;use think\Controller;use think\Db;use think\Log;class Payment extends Controller{    /**     * 回调     */    public function refund_notify(){        $wechat_option = GetCache::getCache('wechat');        $config = [            // 必要配置            'app_id'             => $wechat_option['app_id'],            'mch_id'             => $wechat_option['mch_id'],            'key'                => $wechat_option['key'],   // API 密钥            // 如需使用敏感接口（如退款、发送红包等）需要配置 API 证书路径(登录商户平台下载 API 证书)            'cert_path'          => './cert/apiclient_cert.pem', // XXX: 绝对路径！！！！            'key_path'           => './cert/apiclient_key',      // XXX: 绝对路径！！！！            'notify_url'         => url('payment/refund_notify','','',true),     // 你也可以在下单时单独设置来想覆盖它        ];        $app = Factory::payment($config);        $response = $app->handleRefundedNotify(function ($message, $reqInfo, $fail) {            // 其中 $message['req_info'] 获取到的是加密信息            // $reqInfo 为 message['req_info'] 解密后的信息            // 你的业务逻辑...            // return true; // 返回 true 告诉微信“我已处理完成”            // 或返回错误原因 $fail('参数格式校验错误');            Log::write(json_encode(["message" => $message,"reqInfo" => $reqInfo]),'error');            $order_info = Db::name('orders')->where(['o_trade_no' => $reqInfo['out_trade_no']])->find();            if(!$order_info) {                return true;            }            if($order_info['out_refund_no'] != $reqInfo['out_refund_no']) {                return true;            }            if($order_info['o_money']*100 != $reqInfo['refund_fee']){                // 金额和订单不对应                return true;            }            if ($reqInfo['return_code'] === 'SUCCESS') { // return_code 表示通信状态，不代表支付状态                // 用户是否支付成功                if ($reqInfo['result_code'] === 'SUCCESS') {                    Db::name('orders')->where(['o_id'=>$order_info['o_id']])->update([                        'o_out_status' => 5,                    ]);                }elseif ($reqInfo['result_code'] === 'FAIL'){                    // 提交业务失败                }            } else {                return $fail('通信失败，请稍后再通知我');            }            return true; // 返回处理完成        });        $response->send();    }}